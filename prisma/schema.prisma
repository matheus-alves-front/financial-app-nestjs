// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Profile {
  id       Int    @id @default(autoincrement())
  name     String @unique
  password String

  monthExpense    MonthExpense[]
  categoryExpense CategoryExpense[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  categoryExpense CategoryExpense[]
}

model Expense {
  id             Int               @id @default(autoincrement())
  name           String
  isEntry        Boolean
  isFixed        Boolean
  expiresInMonth Int
  expiresInYear  Int
  value          Float
  category       CategoryExpense[]
  months         MonthExpense[]
}

model Month {
  id                      Int            @id @default(autoincrement())
  month                   Int
  year                    Int
  totalExpenses           Float
  totalFixedExpenses      Float
  totalEntryExpenses      Float
  totalFixedEntryExpenses Float
  totalAmountLeft         Float
  expenses                MonthExpense[]
}

model MonthExpense {
  expense   Expense @relation(fields: [expenseId], references: [id])
  expenseId Int 
  month     Month   @relation(fields: [monthId], references: [id])
  monthId   Int

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId Int

  @@id([expenseId, monthId])
}

model CategoryExpense {
  id           Int      @id @default(autoincrement())
  expense      Expense? @relation(fields: [expenseId], references: [id])
  expenseId    Int?     @unique
  category     Category @relation(fields: [categoryName], references: [name])
  categoryName String

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId Int
}
